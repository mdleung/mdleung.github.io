{"version":3,"sources":["webpack:///./src/pages/work.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["WorkPage","data","location","siteTitle","site","siteMetadata","title","workPosts","allMarkdownRemark","edges","map","work","node","frontmatter","fields","slug","key","style","marginTop","marginBottom","rhythm","fontFamily","boxShadow","color","fontSize","fontWeight","to","dangerouslySetInnerHTML","__html","description","excerpt","href","link","target","pageQuery","createHTML","url","this"],"mappings":"+NA+EeA,UAzEE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAYN,EAAKO,kBAAkBC,MAEzC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACVC,EAAUG,KAAI,SAAAC,GACb,IAAML,EAAQK,EAAKC,KAAKC,YAAYP,OAASK,EAAKC,KAAKE,OAAOC,KACxDH,EAAOD,EAAKC,KAClB,OACE,6BACEI,IAAKJ,EAAKE,OAAOC,KACjBE,MAAO,CACLC,UAAU,QACVC,aAAa,SAGf,gCACE,wBACEF,MAAO,CACLE,aAAcC,YAAO,IACrBC,WAAW,eAGb,kBAAC,OAAD,CACEJ,MAAO,CACLK,UAAU,OACVC,MAAO,UACPC,SAAS,OACTC,WAAW,MACXJ,WAAW,cAEbK,GAAId,EAAKE,OAAOC,MAEfT,KAIP,6BACEW,MAAO,CACLM,MAAO,UACPC,SAAS,OACTC,WAAW,MACXJ,WAAW,eAGb,uBACEJ,MAAO,CAAEE,aAAa,OACtBQ,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,WAGjD,uBACEC,KAAMnB,EAAKC,YAAYmB,KACvBC,OAAO,QACPhB,MAAO,CACLM,MAAM,UACNC,SAAS,OACTC,WAAW,MACXJ,WAAW,eAPf,uBAsBP,IAAMa,EAAS,c,kCC/EtB,EAAQ,OAAR,CAA0B,QAAQ,SAAUC,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWE,KAAM,IAAK,OAAQD","file":"component---src-pages-work-js-ab17d00a017a7f5fdb8c.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst WorkPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const workPosts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Work\" />\n      {workPosts.map(work => {\n        const title = work.node.frontmatter.title || work.node.fields.slug\n        const node = work.node\n        return (\n          <article\n            key={node.fields.slug}\n            style={{\n              marginTop: `-15px`,\n              marginBottom: `70px`,\n            }}\n          >\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 10),\n                  fontFamily: `Montserrat`,\n                }}\n              >\n                <Link\n                  style={{\n                    boxShadow: `none`,\n                    color: \"#000000\",\n                    fontSize: `21px`,\n                    fontWeight: `400`,\n                    fontFamily: `Montserrat`,\n                  }}\n                  to={node.fields.slug}\n                >\n                  {title}\n                </Link>\n              </h3>\n            </header>\n            <section\n              style={{\n                color: \"#888888\",\n                fontSize: `17px`,\n                fontWeight: `300`,\n                fontFamily: `Montserrat`,\n              }}\n            >\n              <p\n                style={{ marginBottom: `5px` }}\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n              <a\n                href={node.frontmatter.link}\n                target=\"blank\"\n                style={{\n                  color: `#000000`,\n                  fontSize: `15px`,\n                  fontWeight: `300`,\n                  fontFamily: `Montserrat`,\n                }}\n              >\n                View Project\n              </a>\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default WorkPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { template: { eq: \"work\" } } }) {\n      edges {\n        node {\n          frontmatter {\n            template\n            title\n            tags\n            description\n            slug\n            category\n            link\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}